{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Node.js API model",
    "description": "Node.js Express API Microservice with Mongo",
    "contact": {
      "email": "david.a.m@live.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "externalDocs": {
    "description": "Find out more about this API",
    "url": "https://github.com/dmancilla85/node-rest-server"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api"
    },
    {
      "url": "https://localhost:8080/api"
    }
  ],
  "tags": [
    {
      "name": "API",
      "description": "API tools"
    },
    {
      "name": "Auth",
      "description": "Login with password or Google SSO"
    },
    {
      "name": "Categories",
      "description": "Operations with product categories"
    },
    {
      "name": "Products",
      "description": "Operations with products"
    },
    {
      "name": "Search",
      "description": "Search at different collections in store"
    },
    {
      "name": "Uploads",
      "description": "Upload images"
    },
    {
      "name": "Users",
      "description": "All related to system users"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["API"],
        "summary": "Check API status",
        "description": "Check for API status and Mongo connection",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": ["API"],
        "summary": "Get API Prometheus metrics",
        "description": "Retrieves all Prometheus metrics",
        "operationId": "metrics",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login with password",
        "description": "Login with user password",
        "operationId": "login",
        "requestBody": {
          "description": "Log in with user and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login with Google account",
        "description": "Login with a Google account",
        "operationId": "googleSignIn",
        "requestBody": {
          "description": "Log in using Google Auth",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginAuthorized"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "description": "Get all categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No categories found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Add a new category to the store",
        "description": "Add a new category to the store",
        "operationId": "postCategories",
        "requestBody": {
          "description": "Create a new category in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Category created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category by ID",
        "description": "Find a category searching by ID",
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the category to be fetched",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete an existing category",
        "description": "Delete an existing category by Id",
        "operationId": "deleteCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the category to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid category ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Category ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update an existing category",
        "description": "Update an existing category by Id",
        "operationId": "updateCategories",
        "requestBody": {
          "description": "Update an existent category in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the category to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid MongoID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "There is no category with that MongoID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "Get all products",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No products found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "post": {
        "tags": ["Products"],
        "summary": "Add a new product to the store",
        "description": "Add a new product to the store",
        "operationId": "postProducts",
        "requestBody": {
          "description": "Create a new product in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "description": "Find a product searching by ID",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the product to be fetched",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete an existing product",
        "description": "Delete an existing product by Id",
        "operationId": "deleteProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the product to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid product ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Product ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update an existing product",
        "description": "Update an existing product by Id",
        "operationId": "updateProducts",
        "requestBody": {
          "description": "Update an existent product in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the product to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid MongoID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with that MongoID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/search/{collection}/{term}": {
      "get": {
        "tags": ["Search"],
        "summary": "Search in collections",
        "description": "Search for a specific term in a defined collection.",
        "operationId": "search",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "description": "The collection to search the term",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "term",
            "in": "path",
            "description": "The search term",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/Product" },
                      { "$ref": "#/components/schemas/Category" },
                      { "$ref": "#/components/schemas/User" }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid term or collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Collection not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/uploads": {
      "post": {
        "tags": ["Uploads"],
        "summary": "Upload files to server",
        "description": "Upload a file to server for products or users.",
        "operationId": "uploadFiles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Error uploading file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/uploads/{collection}/{id}": {
      "get": {
        "tags": ["Uploads"],
        "summary": "Get files from server or Cloudinary",
        "description": "Get files from server or Cloudinary for a defined collection.",
        "operationId": "getFiles",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "description": "The collection to search the term",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Element ID",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "image": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID or collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "image": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "501": {
            "description": "Collection not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Error getting file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "put": {
        "tags": ["Uploads"],
        "summary": "Update a file in server",
        "description": "Upload a file to server for products or users.",
        "operationId": "updateLocalImage",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "description": "The collection to search the term",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Element ID",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/Product" },
                    { "$ref": "#/components/schemas/Category" },
                    { "$ref": "#/components/schemas/User" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID or collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Collection not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Error updating file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "security": [
        {
          "token_auth": []
        }
      ]
    },
    "/uploads/cloud/{collection}/{id}": {
      "put": {
        "tags": ["Uploads"],
        "summary": "Update a file in Cloudinary",
        "description": "Upload a file to Cloudinary for products or users.",
        "operationId": "updateCloudinaryImage",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "description": "The collection to search the term",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Element ID",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/Product" },
                    { "$ref": "#/components/schemas/Category" },
                    { "$ref": "#/components/schemas/User" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID or collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Collection not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Error updating file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Get all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No users found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "post": {
        "tags": ["Users"],
        "summary": "Add a new user to the store",
        "description": "Add a new user to the store",
        "operationId": "postUsers",
        "requestBody": {
          "description": "Create a new user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get users by ID",
        "description": "Find a user searching by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the user to be fetched",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete an existing user",
        "description": "Delete an existing user by Id",
        "operationId": "deleteUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the user to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "User ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update an existing user",
        "description": "Update an existing user by Id",
        "operationId": "updateUsers",
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The MongoID of the user to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid MongoID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token, user unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "There is no user with that MongoID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "token_auth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "required": ["name", "category"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "example": "6208136134ffbeeabc4b1ead"
          },
          "name": {
            "type": "string",
            "example": "PASTRIES"
          },
          "status": {
            "type": "boolean",
            "description": "current status in the store"
          }
        }
      },
      "GoogleLogin": {
        "required": ["id_token"],
        "type": "object",
        "properties": {
          "id_token": {
            "type": "string",
            "example": "zndksdfjvrEEASJFu38738dhfnFDS"
          }
        }
      },
      "Login": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test3@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          }
        }
      },
      "LoginAuthorized": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2MjAzMjI1MGZkY2E1Y2ExYTE3MGQ5NzciLCJpYXQiOjE2NjMzNDI1OTMsImV4cCI6MTY2MzM1Njk5M30.xFPKG8n_TIfPGRI6rlpSE3KSNyOC7BTOnYOqNnJtzcw"
          }
        }
      },
      "NewCategory": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "PASTRY ROLL"
          }
        }
      },
      "NewProduct": {
        "required": ["name", "category"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "PASTRY ROLL"
          },
          "categoryId": {
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "example": "62083fbdb5d9510f71cf6988"
          },
          "price": {
            "type": "numeric",
            "example": 10.0
          },
          "description": {
            "type": "string",
            "example": "A delicious pastry roll"
          },
          "available": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "NewUser": {
        "required": ["name", "password", "role", "email"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Smith"
          },
          "password": {
            "type": "string",
            "example": "passw0rd!"
          },
          "email": {
            "type": "string",
            "example": "j.smith@gmail.com"
          },
          "role": {
            "type": "string",
            "example": "ADMIN_ROLE",
            "enum": ["ADMIN_ROLE", "USER_ROLE"]
          }
        }
      },
      "Product": {
        "required": ["name", "category"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "example": "68376272814ffbeeabc4b1ed"
          },
          "name": {
            "type": "string",
            "example": "PASTRY ROLL"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "status": {
            "type": "boolean",
            "description": "current status in the store"
          }
        }
      },
      "User": {
        "required": ["name", "category"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "example": "68373827924ffbeeabc4b1ed"
          },
          "name": {
            "type": "string",
            "example": "John Smith"
          },
          "email": {
            "type": "string",
            "example": "test3@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          },
          "img": {
            "type": "string",
            "example": "test.jpg"
          },
          "role": {
            "type": "string",
            "example": "ADMIN_ROLE",
            "enum": ["ADMIN_ROLE", "USER_ROLE"]
          },
          "google": {
            "type": "boolean",
            "description": "has Google authentication"
          },
          "status": {
            "type": "boolean",
            "description": "current status in the store"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "BadRequest"
          },
          "title": {
            "type": "string",
            "example": "Invalid ID"
          },
          "detail": {
            "type": "string",
            "example": "The ID supplied is not a valid MongoID value"
          }
        }
      }
    },
    "securitySchemes": {
      "token_auth": {
        "type": "apiKey",
        "name": "x-token",
        "in": "header"
      }
    }
  }
}
